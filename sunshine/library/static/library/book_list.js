// Generated by CoffeeScript 1.3.1
(function() {
  var Book,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  Book = Library.Book;

  Library.BookList = (function(_super) {

    __extends(BookList, _super);

    BookList.name = 'BookList';

    BookList.prototype.elements = {
      'li': 'list_items'
    };

    function BookList() {
      this.render_one = __bind(this.render_one, this);

      this.render_all = __bind(this.render_all, this);
      BookList.__super__.constructor.apply(this, arguments);
      this.items = [];
      Book.bind('refresh', this.render_all);
      Book.fetch();
    }

    BookList.prototype.render_all = function(books) {
      var book, _i, _len;
      for (_i = 0, _len = books.length; _i < _len; _i++) {
        book = books[_i];
        this.render_one(book);
      }
      if (!books.length) {
        return this.append($.render(book_list_blank_state));
      }
    };

    BookList.prototype.add_item = function(item) {
      var i;
      i = _.sortedIndex(this.items, item, function(x) {
        return -Date.parse(x.book.upload_datetime);
      });
      this.items = this.items.slice(0, (i - 1) + 1 || 9e9).concat([item], this.items.slice(i));
      return i;
    };

    BookList.prototype.render_one = function(book) {
      var element, index, item;
      item = new Library.BookItem({
        book: book
      });
      index = this.add_item(item);
      element = item.render();
      if (index === 0) {
        this.prepend(element);
      } else if (index === this.list_items.length) {
        this.append(element);
      } else {
        $(this.list_items[index]).before(element);
        this.refreshElements();
      }
      return element.slideDown();
    };

    return BookList;

  })(Spine.Controller);

  Library.BookItem = (function(_super) {

    __extends(BookItem, _super);

    BookItem.name = 'BookItem';

    BookItem.prototype.events = {
      'click .edit': 'on_edit',
      'click .read': 'on_read',
      'click .delete': 'on_delete'
    };

    function BookItem() {
      this.render = __bind(this.render, this);
      BookItem.__super__.constructor.apply(this, arguments);
      this.book.bind('update', this.render);
      this.book.bind('destroy', this.el.remove);
    }

    BookItem.prototype.render = function() {
      this.replace($.render(book_template, this.book));
      return this.el;
    };

    return BookItem;

  })(Spine.Controller);

  $(function() {
    var book_list_blank_state, book_template;
    book_template = $.jqotec('#book_template');
    book_list_blank_state = $.jqotec('#book_list_blank_state');
    return Library.book_list = new Library.BookList({
      el: $('.book-list')
    });
  });

}).call(this);
